#****Begin: Generated Statements***
#****End: Generated Statements****

sError = '';
sAuthenticationMode = 'BASIC_API_KEY';

# BASIC API KEY AUTHENTICATION PARAMETERS
user = 'apikey';
password = '<api_key_value>';
base_url = 'https://us-east-1.planninganalytics.saas.ibm.com/api/<tenant_id>/v0/tm1/<database_name>';

auth_url = '';



##########################################################################################
#Region - _construct_service_and_auth_root (Convert Python to TI)
##########################################################################################

#Region - _construct_all_version_service_and_auth_root_from_base_url (Convert Python to TI)

sEndsWith = '/api/v1';
nEndsWith = LONG( sEndsWith );


IF( SCAN( 'api/v1/Databases', base_url ) <> 0 );
  IF( auth_url @= '' );
    sError = 'Authentication Method was determined to be: "' | sAuthenticationMode | '" and base_url includes "api/v1/Databases", which requires "auth_url". However, "auth_url='|auth_url|'".';
    LogOutput( 'ERROR', sError );
    ProcessBreak();
  ENDIF;
  
ELSEIF( SUBST( base_url, LONG( base_url ) - nEndsWith, nEndsWith ) @= sEndsWith );
  auth_url = base_url | '/Configuration/ProductVersion/$value';
ELSE;
  base_url = base_url | sEndsWith;
  auth_url = base_url | '/Configuration/ProductVersion/$value';
ENDIF;
#EndRegion - _construct_all_version_service_and_auth_root_from_base_url (Convert Python to TI)
  

##########################################################################################
#EndRegion - _construct_service_and_auth_root (Convert Python to TI)
##########################################################################################

base_url = base_url | '/Processes';


#Region - ExecuteHttpRequest to create loading TI
sProcessBody = '{"Name": "}bedrock-installation.from_json", "PrologProcedure": "#****Begin: Generated Statements***\r\n#****End: Generated Statements****\r\n\r\n# List of Keys required for a Process to be created from HTTP Request\r\nsJsonKeyList = ''[\r\n    \"Name\",\r\n    \"PrologProcedure\",\r\n    \"MetadataProcedure\",\r\n    \"DataProcedure\",\r\n    \"EpilogProcedure\",\r\n    \"HasSecurityAccess\",\r\n    \"UIData\",\r\n    \"DataSource\",\r\n    \"Parameters\",\r\n    \"Variables\",\r\n    \"VariablesUIData\"\r\n]'';\r\n\r\n# Create the Variable Mapping based on List of Keys\r\nsVarMapping = ''{}'';\r\nnListSize = JsonSize( sJsonKeyList );\r\ni = 0;\r\nWHILE( i <  nListSize );\r\n    sKeyName = JsonToString( JsonGet(sJsonKeyList, i ) );\r\n    sVarMapping = JsonAdd( sVarMapping, ''v'' | sKeyName, StringToJson ( ''/'' | sKeyName ) );\r\n\r\n    i = i + 1;\r\nEND;\r\n\r\n# Datasource Variables\r\nDataSourceJsonVariableMapping = sVarMapping;\r\nDataSourceType = ''JSON'';\r\nDataSourceJsonRootPointer     = ''/data'';\r\nDatasourceNameForServer       = ''bedrock.json'';", "MetadataProcedure": "#****Begin: Generated Statements***\r\n#****End: Generated Statements****", "DataProcedure": "#****Begin: Generated Statements***\r\n#****End: Generated Statements****\r\n\r\nsProcessJson = ''{}'';\r\ni = 0;\r\nWHILE( i <  nListSize );\r\n    sKeyName = JsonToString( JsonGet(sJsonKeyList, i ) );\r\n    sProcessJson = JsonAdd( sProcessJson, sKeyName, EXPAND( ''%v'' | sKeyName | ''%'' ) );\r\n\r\n    i = i + 1;\r\nEND;\r\n\r\n\r\nsProcessName = JsonToString( JsonGet( sProcessJson, ''Name'' ) );\r\n\r\nExecuteHttpRequest( ''delete'', url | ''('''''' | sProcessName | '''''')'', ''-u apikey:'' | api_key, ''-h User-Agent:BedrockInstaller'', ''-h Content-Type:application/json; odata.streaming=true; charset=utf-8'', ''-h Accept:application/json;odata.metadata=none,text/plain'', ''-h TM1-SessionContext:BedrockInstaller'', ''-k'' );\r\nsBody = HttpResponseGetBody(); nStatusCode = HttpResponseGetStatusCode();\r\n\r\nExecuteHttpRequest( ''POST'', url, ''-u apikey:'' | api_key, ''-h User-Agent:BedrockInstaller'', ''-h Content-Type:application/json; odata.streaming=true; charset=utf-8'', ''-h Accept:application/json;odata.metadata=none,text/plain'', ''-h TM1-SessionContext:BedrockInstaller'', ''-d '' | sProcessJson, ''-k'' );\r\nsBody = HttpResponseGetBody(); nStatusCode = HttpResponseGetStatusCode();\r\n\r\nIF( INT( nStatusCode / 100 ) <> 2 );\r\n  LogOutput( ''ERROR'', ''Failed to Create/Modify Process: \"'' | sProcessName | ''\". Status Code: '' | NumberToString( nStatusCode ) );\r\n    TextOutput(''INFO.txt'', sProcessJson );\r\n    TextOutput(''INFO.txt'', NumberToString( nStatusCode ), sBody );\r\nENDIF;", "EpilogProcedure": "#****Begin: Generated Statements***\r\n#****End: Generated Statements****", "HasSecurityAccess": false, "UIData": "_ParameterConstraints=e30=\f", "DataSource": {"Type": "JSON", "dataSourceNameForClient": "", "dataSourceNameForServer": "", "jsonRootPointer": "", "jsonVariableMapping": "{}"}, "Parameters": [{"Name": "url", "Prompt": "", "Value": "", "Type": "String"}, {"Name": "api_key", "Prompt": "", "Value": "", "Type": "String"}], "Variables": [{"Name": "vName", "Type": "String", "Position": 1, "StartByte": 0, "EndByte": 0}, {"Name": "vPrologProcedure", "Type": "String", "Position": 2, "StartByte": 0, "EndByte": 0}, {"Name": "vMetadataProcedure", "Type": "String", "Position": 3, "StartByte": 0, "EndByte": 0}, {"Name": "vDataProcedure", "Type": "String", "Position": 4, "StartByte": 0, "EndByte": 0}, {"Name": "vEpilogProcedure", "Type": "String", "Position": 5, "StartByte": 0, "EndByte": 0}, {"Name": "vHasSecurityAccess", "Type": "String", "Position": 6, "StartByte": 0, "EndByte": 0}, {"Name": "vUIData", "Type": "String", "Position": 7, "StartByte": 0, "EndByte": 0}, {"Name": "vDataSource", "Type": "String", "Position": 8, "StartByte": 0, "EndByte": 0}, {"Name": "vParameters", "Type": "String", "Position": 9, "StartByte": 0, "EndByte": 0}, {"Name": "vVariables", "Type": "String", "Position": 10, "StartByte": 0, "EndByte": 0}, {"Name": "vVariablesUIData", "Type": "String", "Position": 11, "StartByte": 0, "EndByte": 0}], "VariablesUIData": ["VarType=32\fColType=827\f", "VarType=32\fColType=827\f", "VarType=32\fColType=827\f", "VarType=32\fColType=827\f", "VarType=32\fColType=827\f", "VarType=32\fColType=827\f", "VarType=32\fColType=827\f", "VarType=32\fColType=827\f", "VarType=32\fColType=827\f", "VarType=32\fColType=827\f", "VarType=32\fColType=827\f"]}';
sProcessName = JsonToString( JsonGet( sProcessBody, 'Name' ) );

ExecuteHttpRequest( 'delete', base_url | '(''' | sProcessName | ''')', '-u '|user|':'|password, '-h User-Agent:BedrockInstaller', '-h Content-Type:application/json; odata.streaming=true; charset=utf-8', '-h Accept:application/json;odata.metadata=none,text/plain', '-h TM1-SessionContext:BedrockInstaller', '-k' );
sBody = HttpResponseGetBody(); nStatusCode = HttpResponseGetStatusCode();

ExecuteHttpRequest( 'POST', base_url, '-u '|user|':'|password, '-h User-Agent:BedrockInstaller', '-h Content-Type:application/json; odata.streaming=true; charset=utf-8', '-h Accept:application/json;odata.metadata=none,text/plain', '-h TM1-SessionContext:BedrockInstaller', '-d ' | sProcessBody, '-k' );
sBody = HttpResponseGetBody(); nStatusCode = HttpResponseGetStatusCode();

IF( INT( nStatusCode / 100 ) <> 2 );
  LogOutput( 'ERROR', 'Failed to TI Generating Process: "' | sProcessName | '". Status Code: ' | NumberToString( nStatusCode ) | '. Body: ' | sBody );
  ProcessQuit();
ENDIF;
#EndRegion

ExecuteProcess( sProcessName,
  'url', base_url,
  'api_key', password );

